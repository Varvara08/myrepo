# Makefile.in generated by automake 1.13.4 from Makefile.am.
# src/core/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2012,2013,2014 The ESPResSo project
# Copyright (C) 2007,2008,2009,2010,2011 Olaf Lenz, Axel Arnold
#
# This file is part of ESPResSo.
#
# ESPResSo is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ESPResSo is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#


VPATH = ../../../src/core
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/espresso
pkgincludedir = $(includedir)/espresso
pkglibdir = $(libdir)/espresso
pkglibexecdir = $(libexecdir)/espresso
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-suse-linux-gnu
host_triplet = x86_64-suse-linux-gnu
target_triplet = x86_64-suse-linux-gnu
#am__append_1 = $(CUDA_SOURCE_FILES) $(CUDA_HEADER_FILES)
#am__append_2 = $(LOFILES)
am__append_3 = config-features.hpp config-features.cpp
am__append_4 = config-features.hpp config-features.cpp

#################################################################
# Handling of the MPI fake implementation
#################################################################
#am__append_5 = mpifake/mpi.h mpifake/mpi.cpp
subdir = src/core
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/config/depcomp $(noinst_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/Espresso.m4 \
	$(top_srcdir)/config/ax_count_cpus.m4 \
	$(top_srcdir)/config/ax_prog_cxx_mpi.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_python_module.m4 \
	$(top_srcdir)/config/cuda.m4 $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/acconfig.hpp
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
#am__DEPENDENCIES_1 = cuda_init_cuda.lo cuda_common_cuda.lo \
#	electrokinetics_cuda.lo lbgpu_cuda.lo \
#	p3m_gpu_cuda.lo EspressoSystemInterface_cuda.lo \
#	actor/Mmm1dgpuForce_cuda.lo \
#	actor/HarmonicWell_cuda.lo
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
#libEspresso_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__libEspresso_la_SOURCES_DIST = config-features.cpp cells.cpp \
	cells.hpp collision.cpp collision.hpp communication.cpp \
	communication.hpp comfixed.cpp comfixed.hpp comforce.hpp \
	comforce.cpp config.hpp constraint.cpp constraint.hpp \
	cuda_interface.cpp cuda_interface.hpp cuda_init.hpp debug.cpp \
	debug.hpp domain_decomposition.cpp domain_decomposition.hpp \
	electrokinetics_pdb_parse.cpp electrokinetics_pdb_parse.hpp \
	energy.cpp energy_inline.hpp energy.hpp external_potential.hpp \
	external_potential.cpp errorhandling.cpp errorhandling.hpp \
	fft.cpp fft.hpp fft-common.cpp fft-common.hpp fft-dipolar.cpp \
	fft-dipolar.hpp forcecap.cpp forcecap.hpp forces.cpp \
	forces_inline.hpp forces.hpp galilei.cpp galilei.hpp \
	ghosts.cpp ghosts.hpp global.cpp global.hpp grid.cpp grid.hpp \
	halo.cpp halo.hpp iccp3m.cpp iccp3m.hpp imd.cpp imd.hpp \
	initialize.cpp initialize.hpp integrate.cpp integrate.hpp \
	interaction_data.cpp interaction_data.hpp lattice.cpp \
	lattice_inline.hpp lattice.hpp layered.cpp layered.hpp lb.cpp \
	lb.hpp lb-boundaries.cpp lb-boundaries.hpp lb-d3q18.hpp \
	lb-d3q19.hpp lbgpu.cpp lbgpu.hpp metadynamics.cpp \
	metadynamics.hpp modes.cpp modes.hpp molforces.cpp \
	molforces.hpp mol_cut.cpp mol_cut.hpp nemd.cpp nemd.hpp \
	npt.hpp nsquare.cpp nsquare.hpp particle_data.cpp \
	particle_data.hpp polymer.cpp polymer.hpp polynom.hpp \
	pressure.cpp pressure.hpp random.cpp random.hpp rattle.cpp \
	rattle.hpp reaction.cpp reaction.hpp rotation.cpp rotation.hpp \
	specfunc.cpp specfunc.hpp statistics.cpp statistics.hpp \
	statistics_chain.cpp statistics_chain.hpp \
	statistics_cluster.cpp statistics_cluster.hpp \
	statistics_correlation.cpp statistics_correlation.hpp \
	statistics_fluid.cpp statistics_fluid.hpp \
	statistics_molecule.cpp statistics_molecule.hpp \
	statistics_observable.cpp statistics_observable.hpp \
	statistics_wallstuff.cpp statistics_wallstuff.hpp \
	thermostat.cpp thermostat.hpp topology.cpp topology.hpp \
	tuning.cpp tuning.hpp utils.hpp uwerr.cpp uwerr.hpp verlet.cpp \
	verlet.hpp virtual_sites.cpp virtual_sites.hpp \
	virtual_sites_com.cpp virtual_sites_com.hpp \
	virtual_sites_relative.cpp virtual_sites_relative.hpp \
	vmdsock.cpp vmdsock.hpp ghmc.cpp ghmc.hpp Vector.hpp \
	SystemInterface.hpp EspressoSystemInterface.hpp \
	EspressoSystemInterface.cpp bmhtf-nacl.cpp bmhtf-nacl.hpp \
	buckingham.cpp buckingham.hpp dpd.cpp dpd.hpp gaussian.cpp \
	gaussian.hpp gb.cpp gb.hpp hat.cpp hat.hpp hertzian.cpp \
	hertzian.hpp lj.cpp lj.hpp ljangle.cpp ljangle.hpp ljcos.cpp \
	ljcos.hpp ljcos2.cpp ljcos2.hpp ljgen.cpp ljgen.hpp morse.cpp \
	morse.hpp soft_sphere.cpp soft_sphere.hpp steppot.cpp \
	steppot.hpp tab.cpp tab.hpp tunable_slip.cpp tunable_slip.hpp \
	angle.cpp angle.hpp angle_harmonic.cpp angle_harmonic.hpp \
	angle_cosine.cpp angle_cosine.hpp angle_cossquare.cpp \
	angle_cossquare.hpp angledist.cpp angledist.hpp dihedral.cpp \
	dihedral.hpp endangledist.cpp endangledist.hpp fene.cpp \
	fene.hpp harmonic.cpp harmonic.hpp overlap.cpp overlap.hpp \
	subt_lj.cpp subt_lj.hpp object-in-fluid/area_force_local.cpp \
	object-in-fluid/area_force_local.hpp \
	object-in-fluid/area_force_global.cpp \
	object-in-fluid/area_force_global.hpp \
	object-in-fluid/bending_force.cpp \
	object-in-fluid/bending_force.hpp \
	object-in-fluid/stretching_force.cpp \
	object-in-fluid/stretching_force.hpp \
	object-in-fluid/stretchlin_force.cpp \
	object-in-fluid/stretchlin_force.hpp \
	object-in-fluid/volume_force.cpp \
	object-in-fluid/volume_force.hpp debye_hueckel.cpp \
	debye_hueckel.hpp elc.cpp elc.hpp magnetic_non_p3m_methods.cpp \
	magnetic_non_p3m_methods.hpp mdlc_correction.cpp \
	mdlc_correction.hpp maggs.cpp maggs.hpp mmm1d.cpp mmm1d.hpp \
	mmm2d.cpp mmm2d.hpp mmm-common.cpp mmm-common.hpp p3m.cpp \
	p3m.hpp p3m-common.cpp p3m-common.hpp p3m-dipolar.cpp \
	p3m-dipolar.hpp reaction_field.cpp reaction_field.hpp \
	actor/Actor.hpp actor/ActorList.cpp actor/ActorList.hpp \
	actor/HarmonicWell.cpp actor/HarmonicWell.hpp \
	actor/Mmm1dgpuForce.cpp actor/Mmm1dgpuForce.hpp \
	actor/mmm-common_cuda.hpp actor/specfunc_cuda.hpp \
	config-version.cpp mpifake/mpi.h mpifake/mpi.cpp
am__dirstamp = $(am__leading_dot)dirstamp
#am__objects_1 = mpifake/mpi.lo
am_libEspresso_la_OBJECTS = config-features.lo cells.lo collision.lo \
	communication.lo comfixed.lo comforce.lo constraint.lo \
	cuda_interface.lo debug.lo domain_decomposition.lo \
	electrokinetics_pdb_parse.lo energy.lo external_potential.lo \
	errorhandling.lo fft.lo fft-common.lo fft-dipolar.lo \
	forcecap.lo forces.lo galilei.lo ghosts.lo global.lo grid.lo \
	halo.lo iccp3m.lo imd.lo initialize.lo integrate.lo \
	interaction_data.lo lattice.lo layered.lo lb.lo \
	lb-boundaries.lo lbgpu.lo metadynamics.lo modes.lo \
	molforces.lo mol_cut.lo nemd.lo nsquare.lo particle_data.lo \
	polymer.lo pressure.lo random.lo rattle.lo reaction.lo \
	rotation.lo specfunc.lo statistics.lo statistics_chain.lo \
	statistics_cluster.lo statistics_correlation.lo \
	statistics_fluid.lo statistics_molecule.lo \
	statistics_observable.lo statistics_wallstuff.lo thermostat.lo \
	topology.lo tuning.lo uwerr.lo verlet.lo virtual_sites.lo \
	virtual_sites_com.lo virtual_sites_relative.lo vmdsock.lo \
	ghmc.lo EspressoSystemInterface.lo bmhtf-nacl.lo buckingham.lo \
	dpd.lo gaussian.lo gb.lo hat.lo hertzian.lo lj.lo ljangle.lo \
	ljcos.lo ljcos2.lo ljgen.lo morse.lo soft_sphere.lo steppot.lo \
	tab.lo tunable_slip.lo angle.lo angle_harmonic.lo \
	angle_cosine.lo angle_cossquare.lo angledist.lo dihedral.lo \
	endangledist.lo fene.lo harmonic.lo overlap.lo subt_lj.lo \
	object-in-fluid/area_force_local.lo \
	object-in-fluid/area_force_global.lo \
	object-in-fluid/bending_force.lo \
	object-in-fluid/stretching_force.lo \
	object-in-fluid/stretchlin_force.lo \
	object-in-fluid/volume_force.lo debye_hueckel.lo elc.lo \
	magnetic_non_p3m_methods.lo mdlc_correction.lo maggs.lo \
	mmm1d.lo mmm2d.lo mmm-common.lo p3m.lo p3m-common.lo \
	p3m-dipolar.lo reaction_field.lo actor/ActorList.lo \
	actor/HarmonicWell.lo actor/Mmm1dgpuForce.lo config-version.lo \
	$(am__objects_1)
libEspresso_la_OBJECTS = $(am_libEspresso_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libEspresso_la_SOURCES)
DIST_SOURCES = $(am__libEspresso_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.13
AWK = gawk
BIBTEX = /usr/bin/bibtex
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONFIG_STATUS_DEPENDENCIES = $(top_srcdir)/src/features.def $(top_srcdir)/config/gen_sampleconfig.py
CPP = gcc -E
CPPFLAGS = 
CPU_COUNT = 4
CXX = mpic++
CXXCPP = mpic++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -O3 
CYGPATH_W = echo
CYTHON = /usr/bin/cython
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOT = /usr/bin/dot
DOT_PATH = /usr/bin
DOXYGEN = no
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ESPRESSO_MPIEXEC = /home/alexk/Esp/espresso-3.3.1/es-build/tools/es_mpiexec
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_DOT = YES
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/x86_64-suse-linux/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -ltcl8.6 -lfftw3  -lm
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINDEX = /usr/bin/makeindex
MAKEINFO = makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MPICXX = 
MPIEXEC = /usr/lib64/mpi/gcc/openmpi/bin/mpiexec
MPI_FAKE = 
MYCONFIG = myconfig.hpp
MYMPIEXEC = /home/alexk/Esp/espresso-3.3.1/es-build/mympiexec.sh
NM = /usr/bin/nm -B
NMEDIT = 
NVCC = no
NVCCFLAGS =  --ptxas-options=-v -gencode arch=compute_20,code=compute_20
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = espresso
PACKAGE_BUGREPORT = espressomd-users@nongnu.org
PACKAGE_NAME = ESPResSo
PACKAGE_STRING = ESPResSo 3.3.1
PACKAGE_TARNAME = espresso
PACKAGE_URL = 
PACKAGE_VERSION = 3.3.1
PATH_SEPARATOR = :
PDFLATEX = /usr/bin/pdflatex
POW_LIB = 
PYTHON = /usr/bin/python
PYTHONCONFIG = /usr/bin/python2.7-config
PYTHON_CPPFLAGS = -I/usr/include/python2.7 -I/usr/include/python2.7 -fno-strict-aliasing -fmessage-length=0 -grecord-gcc-switches -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -DNDEBUG -fmessage-length=0 -grecord-gcc-switches -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -DOPENSSL_LOAD_CONF -I/usr/lib64/python2.7/site-packages/numpy/core/include
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = -lpython2.7 -lpthread -ldl -lutil -lm
PYTHON_LDFLAGS = -lpython2.7 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_SITE_PKG = 
PYTHON_VERSION = 2.7
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 3.3.1
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /home/alexk/Esp/espresso-3.3.1/es-build/src/core
abs_srcdir = /home/alexk/Esp/espresso-3.3.1/es-build/../src/core
abs_top_builddir = /home/alexk/Esp/espresso-3.3.1/es-build
abs_top_srcdir = /home/alexk/Esp/espresso-3.3.1/es-build/..
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = mpic++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-suse-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = suse
builddir = .
buildscriptsdir = ${abs_top_builddir}/scripts
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-suse-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = suse
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/alexk/Esp/espresso-3.3.1/config/install-sh
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
objdir = .libs
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/espresso
pkgpythondir = ${pythondir}/espresso
prefix = /home/alexk/Espresso
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib64/python2.7/site-packages
pythondir = ${prefix}/lib/python2.7/site-packages
sbindir = ${exec_prefix}/sbin
scriptsdir = ${pkgdatadir}/scripts
sharedstatedir = ${prefix}/com
srcdir = ../../../src/core
sysconfdir = ${prefix}/etc
target = x86_64-suse-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = suse
toolsdir = ${pkgdatadir}/tools
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../../..

#################################################################
# Handling of the features
#################################################################
EXTRA_DIST = $(am__append_1) gen_featureconfig.py config-features.hpp \
	config-features.cpp
CLEANFILES = $(am__append_2) myconfig-final.hpp $(am__append_4) \
	config-version.cpp
AM_DEFAULT_SOURCE_EXT = .cpp
noinst_LTLIBRARIES = libEspresso.la
# List the sources of the Espresso binary here
# config-features.cpp must be at the beginning so that it is compiled first

# nonbonded potentials and forces

# bonded potentials and forces

# Coulomb methods

# Generic actors

#################################################################
# Handling of the version
#################################################################
libEspresso_la_SOURCES = config-features.cpp cells.cpp cells.hpp \
	collision.cpp collision.hpp communication.cpp \
	communication.hpp comfixed.cpp comfixed.hpp comforce.hpp \
	comforce.cpp config.hpp constraint.cpp constraint.hpp \
	cuda_interface.cpp cuda_interface.hpp cuda_init.hpp debug.cpp \
	debug.hpp domain_decomposition.cpp domain_decomposition.hpp \
	electrokinetics_pdb_parse.cpp electrokinetics_pdb_parse.hpp \
	energy.cpp energy_inline.hpp energy.hpp external_potential.hpp \
	external_potential.cpp errorhandling.cpp errorhandling.hpp \
	fft.cpp fft.hpp fft-common.cpp fft-common.hpp fft-dipolar.cpp \
	fft-dipolar.hpp forcecap.cpp forcecap.hpp forces.cpp \
	forces_inline.hpp forces.hpp galilei.cpp galilei.hpp \
	ghosts.cpp ghosts.hpp global.cpp global.hpp grid.cpp grid.hpp \
	halo.cpp halo.hpp iccp3m.cpp iccp3m.hpp imd.cpp imd.hpp \
	initialize.cpp initialize.hpp integrate.cpp integrate.hpp \
	interaction_data.cpp interaction_data.hpp lattice.cpp \
	lattice_inline.hpp lattice.hpp layered.cpp layered.hpp lb.cpp \
	lb.hpp lb-boundaries.cpp lb-boundaries.hpp lb-d3q18.hpp \
	lb-d3q19.hpp lbgpu.cpp lbgpu.hpp metadynamics.cpp \
	metadynamics.hpp modes.cpp modes.hpp molforces.cpp \
	molforces.hpp mol_cut.cpp mol_cut.hpp nemd.cpp nemd.hpp \
	npt.hpp nsquare.cpp nsquare.hpp particle_data.cpp \
	particle_data.hpp polymer.cpp polymer.hpp polynom.hpp \
	pressure.cpp pressure.hpp random.cpp random.hpp rattle.cpp \
	rattle.hpp reaction.cpp reaction.hpp rotation.cpp rotation.hpp \
	specfunc.cpp specfunc.hpp statistics.cpp statistics.hpp \
	statistics_chain.cpp statistics_chain.hpp \
	statistics_cluster.cpp statistics_cluster.hpp \
	statistics_correlation.cpp statistics_correlation.hpp \
	statistics_fluid.cpp statistics_fluid.hpp \
	statistics_molecule.cpp statistics_molecule.hpp \
	statistics_observable.cpp statistics_observable.hpp \
	statistics_wallstuff.cpp statistics_wallstuff.hpp \
	thermostat.cpp thermostat.hpp topology.cpp topology.hpp \
	tuning.cpp tuning.hpp utils.hpp uwerr.cpp uwerr.hpp verlet.cpp \
	verlet.hpp virtual_sites.cpp virtual_sites.hpp \
	virtual_sites_com.cpp virtual_sites_com.hpp \
	virtual_sites_relative.cpp virtual_sites_relative.hpp \
	vmdsock.cpp vmdsock.hpp ghmc.cpp ghmc.hpp Vector.hpp \
	SystemInterface.hpp EspressoSystemInterface.hpp \
	EspressoSystemInterface.cpp bmhtf-nacl.cpp bmhtf-nacl.hpp \
	buckingham.cpp buckingham.hpp dpd.cpp dpd.hpp gaussian.cpp \
	gaussian.hpp gb.cpp gb.hpp hat.cpp hat.hpp hertzian.cpp \
	hertzian.hpp lj.cpp lj.hpp ljangle.cpp ljangle.hpp ljcos.cpp \
	ljcos.hpp ljcos2.cpp ljcos2.hpp ljgen.cpp ljgen.hpp morse.cpp \
	morse.hpp soft_sphere.cpp soft_sphere.hpp steppot.cpp \
	steppot.hpp tab.cpp tab.hpp tunable_slip.cpp tunable_slip.hpp \
	angle.cpp angle.hpp angle_harmonic.cpp angle_harmonic.hpp \
	angle_cosine.cpp angle_cosine.hpp angle_cossquare.cpp \
	angle_cossquare.hpp angledist.cpp angledist.hpp dihedral.cpp \
	dihedral.hpp endangledist.cpp endangledist.hpp fene.cpp \
	fene.hpp harmonic.cpp harmonic.hpp overlap.cpp overlap.hpp \
	subt_lj.cpp subt_lj.hpp object-in-fluid/area_force_local.cpp \
	object-in-fluid/area_force_local.hpp \
	object-in-fluid/area_force_global.cpp \
	object-in-fluid/area_force_global.hpp \
	object-in-fluid/bending_force.cpp \
	object-in-fluid/bending_force.hpp \
	object-in-fluid/stretching_force.cpp \
	object-in-fluid/stretching_force.hpp \
	object-in-fluid/stretchlin_force.cpp \
	object-in-fluid/stretchlin_force.hpp \
	object-in-fluid/volume_force.cpp \
	object-in-fluid/volume_force.hpp debye_hueckel.cpp \
	debye_hueckel.hpp elc.cpp elc.hpp magnetic_non_p3m_methods.cpp \
	magnetic_non_p3m_methods.hpp mdlc_correction.cpp \
	mdlc_correction.hpp maggs.cpp maggs.hpp mmm1d.cpp mmm1d.hpp \
	mmm2d.cpp mmm2d.hpp mmm-common.cpp mmm-common.hpp p3m.cpp \
	p3m.hpp p3m-common.cpp p3m-common.hpp p3m-dipolar.cpp \
	p3m-dipolar.hpp reaction_field.cpp reaction_field.hpp \
	actor/Actor.hpp actor/ActorList.cpp actor/ActorList.hpp \
	actor/HarmonicWell.cpp actor/HarmonicWell.hpp \
	actor/Mmm1dgpuForce.cpp actor/Mmm1dgpuForce.hpp \
	actor/mmm-common_cuda.hpp actor/specfunc_cuda.hpp \
	config-version.cpp $(am__append_5)

##################################################
# CUDA rules
##################################################
#SUFFIXES = .cu
#CUDA_HEADER_FILES = \
#	cuda_utils.hpp \
#	cuda_interface.hpp \
#	p3m_gpu.hpp \
#	cuda_init.hpp \
#	actor/mmm-common_cuda.hpp actor/specfunc_cuda.hpp \
#	electrokinetics.hpp

#CUDA_SOURCE_FILES = \
#	cuda_init_cuda.cu \
#	cuda_common_cuda.cu \
#	electrokinetics_cuda.cu \
#	lbgpu_cuda.cu \
#	p3m_gpu_cuda.cu \
#	EspressoSystemInterface_cuda.cu \
#	actor/Mmm1dgpuForce_cuda.cu \
#	actor/HarmonicWell_cuda.cu

#LOFILES = $(CUDA_SOURCE_FILES:.cu=.lo)
#cuda_verbose = $(cuda_verbose_$(V))
#cuda_verbose_ = $(cuda_verbose_$(AM_DEFAULT_VERBOSITY))
#cuda_verbose_0 = @echo "  NVCC     $@";
#libEspresso_la_LIBADD = $(LOFILES)

#################################################################
# Handling of myconfig.hpp
#################################################################
noinst_HEADERS = myconfig-default.hpp
BUILT_SOURCES = myconfig-final.hpp $(am__append_3)
# mpifake should come before any system includes
#AM_CPPFLAGS = -I$(srcdir)/mpifake
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cu .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/core/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/core/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
object-in-fluid/$(am__dirstamp):
	@$(MKDIR_P) object-in-fluid
	@: > object-in-fluid/$(am__dirstamp)
object-in-fluid/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) object-in-fluid/$(DEPDIR)
	@: > object-in-fluid/$(DEPDIR)/$(am__dirstamp)
object-in-fluid/area_force_local.lo: object-in-fluid/$(am__dirstamp) \
	object-in-fluid/$(DEPDIR)/$(am__dirstamp)
object-in-fluid/area_force_global.lo: object-in-fluid/$(am__dirstamp) \
	object-in-fluid/$(DEPDIR)/$(am__dirstamp)
object-in-fluid/bending_force.lo: object-in-fluid/$(am__dirstamp) \
	object-in-fluid/$(DEPDIR)/$(am__dirstamp)
object-in-fluid/stretching_force.lo: object-in-fluid/$(am__dirstamp) \
	object-in-fluid/$(DEPDIR)/$(am__dirstamp)
object-in-fluid/stretchlin_force.lo: object-in-fluid/$(am__dirstamp) \
	object-in-fluid/$(DEPDIR)/$(am__dirstamp)
object-in-fluid/volume_force.lo: object-in-fluid/$(am__dirstamp) \
	object-in-fluid/$(DEPDIR)/$(am__dirstamp)
actor/$(am__dirstamp):
	@$(MKDIR_P) actor
	@: > actor/$(am__dirstamp)
actor/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) actor/$(DEPDIR)
	@: > actor/$(DEPDIR)/$(am__dirstamp)
actor/ActorList.lo: actor/$(am__dirstamp) \
	actor/$(DEPDIR)/$(am__dirstamp)
actor/HarmonicWell.lo: actor/$(am__dirstamp) \
	actor/$(DEPDIR)/$(am__dirstamp)
actor/Mmm1dgpuForce.lo: actor/$(am__dirstamp) \
	actor/$(DEPDIR)/$(am__dirstamp)
mpifake/$(am__dirstamp):
	@$(MKDIR_P) mpifake
	@: > mpifake/$(am__dirstamp)
mpifake/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) mpifake/$(DEPDIR)
	@: > mpifake/$(DEPDIR)/$(am__dirstamp)
mpifake/mpi.lo: mpifake/$(am__dirstamp) \
	mpifake/$(DEPDIR)/$(am__dirstamp)

libEspresso.la: $(libEspresso_la_OBJECTS) $(libEspresso_la_DEPENDENCIES) $(EXTRA_libEspresso_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libEspresso_la_OBJECTS) $(libEspresso_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f actor/*.$(OBJEXT)
	-rm -f actor/*.lo
	-rm -f mpifake/*.$(OBJEXT)
	-rm -f mpifake/*.lo
	-rm -f object-in-fluid/*.$(OBJEXT)
	-rm -f object-in-fluid/*.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/EspressoSystemInterface.Plo
include ./$(DEPDIR)/angle.Plo
include ./$(DEPDIR)/angle_cosine.Plo
include ./$(DEPDIR)/angle_cossquare.Plo
include ./$(DEPDIR)/angle_harmonic.Plo
include ./$(DEPDIR)/angledist.Plo
include ./$(DEPDIR)/bmhtf-nacl.Plo
include ./$(DEPDIR)/buckingham.Plo
include ./$(DEPDIR)/cells.Plo
include ./$(DEPDIR)/collision.Plo
include ./$(DEPDIR)/comfixed.Plo
include ./$(DEPDIR)/comforce.Plo
include ./$(DEPDIR)/communication.Plo
include ./$(DEPDIR)/config-features.Plo
include ./$(DEPDIR)/config-version.Plo
include ./$(DEPDIR)/constraint.Plo
include ./$(DEPDIR)/cuda_interface.Plo
include ./$(DEPDIR)/debug.Plo
include ./$(DEPDIR)/debye_hueckel.Plo
include ./$(DEPDIR)/dihedral.Plo
include ./$(DEPDIR)/domain_decomposition.Plo
include ./$(DEPDIR)/dpd.Plo
include ./$(DEPDIR)/elc.Plo
include ./$(DEPDIR)/electrokinetics_pdb_parse.Plo
include ./$(DEPDIR)/endangledist.Plo
include ./$(DEPDIR)/energy.Plo
include ./$(DEPDIR)/errorhandling.Plo
include ./$(DEPDIR)/external_potential.Plo
include ./$(DEPDIR)/fene.Plo
include ./$(DEPDIR)/fft-common.Plo
include ./$(DEPDIR)/fft-dipolar.Plo
include ./$(DEPDIR)/fft.Plo
include ./$(DEPDIR)/forcecap.Plo
include ./$(DEPDIR)/forces.Plo
include ./$(DEPDIR)/galilei.Plo
include ./$(DEPDIR)/gaussian.Plo
include ./$(DEPDIR)/gb.Plo
include ./$(DEPDIR)/ghmc.Plo
include ./$(DEPDIR)/ghosts.Plo
include ./$(DEPDIR)/global.Plo
include ./$(DEPDIR)/grid.Plo
include ./$(DEPDIR)/halo.Plo
include ./$(DEPDIR)/harmonic.Plo
include ./$(DEPDIR)/hat.Plo
include ./$(DEPDIR)/hertzian.Plo
include ./$(DEPDIR)/iccp3m.Plo
include ./$(DEPDIR)/imd.Plo
include ./$(DEPDIR)/initialize.Plo
include ./$(DEPDIR)/integrate.Plo
include ./$(DEPDIR)/interaction_data.Plo
include ./$(DEPDIR)/lattice.Plo
include ./$(DEPDIR)/layered.Plo
include ./$(DEPDIR)/lb-boundaries.Plo
include ./$(DEPDIR)/lb.Plo
include ./$(DEPDIR)/lbgpu.Plo
include ./$(DEPDIR)/lj.Plo
include ./$(DEPDIR)/ljangle.Plo
include ./$(DEPDIR)/ljcos.Plo
include ./$(DEPDIR)/ljcos2.Plo
include ./$(DEPDIR)/ljgen.Plo
include ./$(DEPDIR)/maggs.Plo
include ./$(DEPDIR)/magnetic_non_p3m_methods.Plo
include ./$(DEPDIR)/mdlc_correction.Plo
include ./$(DEPDIR)/metadynamics.Plo
include ./$(DEPDIR)/mmm-common.Plo
include ./$(DEPDIR)/mmm1d.Plo
include ./$(DEPDIR)/mmm2d.Plo
include ./$(DEPDIR)/modes.Plo
include ./$(DEPDIR)/mol_cut.Plo
include ./$(DEPDIR)/molforces.Plo
include ./$(DEPDIR)/morse.Plo
include ./$(DEPDIR)/nemd.Plo
include ./$(DEPDIR)/nsquare.Plo
include ./$(DEPDIR)/overlap.Plo
include ./$(DEPDIR)/p3m-common.Plo
include ./$(DEPDIR)/p3m-dipolar.Plo
include ./$(DEPDIR)/p3m.Plo
include ./$(DEPDIR)/particle_data.Plo
include ./$(DEPDIR)/polymer.Plo
include ./$(DEPDIR)/pressure.Plo
include ./$(DEPDIR)/random.Plo
include ./$(DEPDIR)/rattle.Plo
include ./$(DEPDIR)/reaction.Plo
include ./$(DEPDIR)/reaction_field.Plo
include ./$(DEPDIR)/rotation.Plo
include ./$(DEPDIR)/soft_sphere.Plo
include ./$(DEPDIR)/specfunc.Plo
include ./$(DEPDIR)/statistics.Plo
include ./$(DEPDIR)/statistics_chain.Plo
include ./$(DEPDIR)/statistics_cluster.Plo
include ./$(DEPDIR)/statistics_correlation.Plo
include ./$(DEPDIR)/statistics_fluid.Plo
include ./$(DEPDIR)/statistics_molecule.Plo
include ./$(DEPDIR)/statistics_observable.Plo
include ./$(DEPDIR)/statistics_wallstuff.Plo
include ./$(DEPDIR)/steppot.Plo
include ./$(DEPDIR)/subt_lj.Plo
include ./$(DEPDIR)/tab.Plo
include ./$(DEPDIR)/thermostat.Plo
include ./$(DEPDIR)/topology.Plo
include ./$(DEPDIR)/tunable_slip.Plo
include ./$(DEPDIR)/tuning.Plo
include ./$(DEPDIR)/uwerr.Plo
include ./$(DEPDIR)/verlet.Plo
include ./$(DEPDIR)/virtual_sites.Plo
include ./$(DEPDIR)/virtual_sites_com.Plo
include ./$(DEPDIR)/virtual_sites_relative.Plo
include ./$(DEPDIR)/vmdsock.Plo
include actor/$(DEPDIR)/ActorList.Plo
include actor/$(DEPDIR)/HarmonicWell.Plo
include actor/$(DEPDIR)/Mmm1dgpuForce.Plo
include mpifake/$(DEPDIR)/mpi.Plo
include object-in-fluid/$(DEPDIR)/area_force_global.Plo
include object-in-fluid/$(DEPDIR)/area_force_local.Plo
include object-in-fluid/$(DEPDIR)/bending_force.Plo
include object-in-fluid/$(DEPDIR)/stretching_force.Plo
include object-in-fluid/$(DEPDIR)/stretchlin_force.Plo
include object-in-fluid/$(DEPDIR)/volume_force.Plo

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf actor/.libs actor/_libs
	-rm -rf mpifake/.libs mpifake/_libs
	-rm -rf object-in-fluid/.libs object-in-fluid/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f actor/$(DEPDIR)/$(am__dirstamp)
	-rm -f actor/$(am__dirstamp)
	-rm -f mpifake/$(DEPDIR)/$(am__dirstamp)
	-rm -f mpifake/$(am__dirstamp)
	-rm -f object-in-fluid/$(DEPDIR)/$(am__dirstamp)
	-rm -f object-in-fluid/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) actor/$(DEPDIR) mpifake/$(DEPDIR) object-in-fluid/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) actor/$(DEPDIR) mpifake/$(DEPDIR) object-in-fluid/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am


# include the dependency tracking files
#include ./$(DEPDIR)/cuda_init_cuda.Plo
#include ./$(DEPDIR)/cuda_common_cuda.Plo
#include ./$(DEPDIR)/electrokinetics_cuda.Plo
#include ./$(DEPDIR)/libgpu_cuda.Plo
#include ./$(DEPDIR)/p3m_gpu_cuda.Plo
#include ./$(DEPDIR)/EspressoSystemInterface_cuda.Plo
#include ./actor/$(DEPDIR)/HarmonicWell_cuda.Plo
#include ./actor/$(DEPDIR)/Mmm1dgpuForce_cuda.Plo

# nvcc does not allow for option MF for dependency generation, 
# therefore make a separate run to generate dependencies
# putting them into DEPDIR ensures configure creates empties dummies
#$(LOFILES): %.lo: %.cu
#	$(cuda_verbose)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(NVCC) $(NVCCFLAGS) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(INCLUDES) $(DEFS) -M -o $$depbase.Plo $<; \
#	$(LIBTOOL) $(AM_V_lt) --tag=CUDA $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#		--mode=compile $(NVCC) $(DEFS) \
#		$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#		$(AM_NVCCFLAGS) $(NVCCFLAGS) -c -o $@ $<

#myconfig-final.hpp: FORCE
#	@if test -e $(top_builddir)/myconfig.hpp; then \
#	  echo "  GEN      $@ <= myconfig.hpp"; \
#	  if test -e $@; then \
#	    cmp -s $(top_builddir)/myconfig.hpp $@ || cp $(top_builddir)/myconfig.hpp $@; \
#	  else \
#	     cp $(top_builddir)/myconfig.hpp $@; \
#	  fi; \
#	else \
#	  echo "ERROR: Couldn't find myconfig.hpp."; \
#	  exit 1; \
#	fi
myconfig-final.hpp: FORCE
	@config_files="\
	  $(top_builddir)/myconfig.hpp \
	  $(top_srcdir)/myconfig.hpp \
	  $(srcdir)/myconfig-default.hpp"; \
	for file in $$config_files; do \
	  if test -e $$file; then \
	    echo "  GEN      $@ <= $$file"; \
	    myconfig_found=1; \
	    if test -e $@; then \
	      cmp -s $$file $@ || cp $$file $@; \
	    else \
	       cp $$file $@; \
	    fi; \
	    break; \
	  fi; \
	done; \
	if test ! $$myconfig_found; then \
	  echo "ERROR: Couldn't find $(myconfig) anywhere"; \
	  exit 1; \
	fi
config-features.hpp config-features.cpp: $(top_srcdir)/src/features.def $(srcdir)/gen_featureconfig.py
	$(AM_V_GEN)$(PYTHON) $(srcdir)/gen_featureconfig.py \
	  $(top_srcdir)/src/features.def config-features.hpp config-features.cpp \
	  > /dev/null

#config-features.hpp config-features.cpp: features.def
#	@echo "Python was not found in your PATH."
#	@echo "If you change the set of features, you need Python!"
#	@echo "Install it and rerun configure."
config-version.cpp: FORCE
	$(AM_V_GEN)VERSION=`cd $(top_srcdir); sh config/genversion.sh -c`; \
	if ! test -e "config-version.cpp" || \
		test "$$VERSION" != "`cat config-version.cpp`"; then \
		echo "$$VERSION" > config-version.cpp; \
	fi

.PHONY: FORCE
FORCE:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
